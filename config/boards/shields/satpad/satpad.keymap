/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// Combo helper
#define COMBO(NAME, BINDINGS, KEYPOS) \
    combo_##NAME { \
        timeout-ms = <50>; \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
    };

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <280>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        td_BKT: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        td_PAR: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        td_BRC: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        td_GRTL: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

    };

/* 
  Keys reference. 
  5 and 16 are just for spacing over the controller.
  27 is the encoder button.
  ╭────────────────────╮╭──╮╭────────────────────╮
  │  0   1   2   3   4 │  5 │  6   7   8   9  10 │
  │ 11  12  13  14  15 │ 16 │ 17  18  19  20  21 │
  │ 22  23  24  25  26 │ 27 │ 28  29  30  31  32 │
  ╰────────────────────╯╰──╯╰────────────────────╯
*/
    combos {
        compatible = "zmk,combos";

        COMBO(space, &kp SPC, 18 19)
        COMBO(backspace, &kp BSPC, 8 18)
        COMBO(escape, &kp ESC, 0  1)
        COMBO(enter, &kp ENTER, 31 32)
        COMBO(tab, &kp TAB, 11 12)
    };

    keymap {
        compatible = "zmk,keymap";

        //-----------------------------------------------------------------------------------------------------------------
        default_layer {
            bindings = <
                &kp Q      &kp W       &kp E      &kp R       &lt 3 T   &none     &kp Y     &kp U       &kp I          &kp O         &ht SQT P
                &kp A      &kp S       &kp D      &kp F       &kp G     &none     &kp H     &kp J       &kp K          &kp L         &lt 4 SEMI
                &ht LGUI Z &ht LCTRL X &ht LALT C &ht LSHFT V &lt 2 B   &kp SPC   &lt 1 N   &ht LSHFT M &ht LALT COMMA &ht LCTRL DOT &ht LGUI FSLH
            >;
            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        // ----------------------------------------------------------------------------------------------------------------
        layer_1 {
            bindings = <
                &kp N1   &kp N2     &kp N3    &kp N4      &kp N5    &none     &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
                &kp A    &kp S      &kp D     &kp F       &kp G     &none     &kp H     &kp N4    &kp N5    &kp N6    &kp DOT
                &kp LGUI &kp LCTRL  &kp LALT  &kp LSHFT   &kp B     &kp SPC   &trans    &kp N1    &kp N2    &kp N3    &kp N0
            >;
            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        //-----------------------------------------------------------------------------------------------------------------
        layer_2 {
            bindings = <
                &td_BKT    &td_GRTL   &kp NUBS  &kp PIPE  &kp SLASH  &none     &kp F1    &kp F2    &kp F3    &kp F4    &kp F5
                &td_PAR    &kp EQUAL  &kp PLUS  &kp MINUS &kp UNDER  &none     &kp F6    &kp F7    &kp F8    &kp F9    &kp F10
                &td_BRC    &kp LA(F4) &kp C     &kp V     &trans     &kp C_PP  &kp F11   &kp F12   &kp LC(C) &kp LC(V) &kp LC(X)
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        //-----------------------------------------------------------------------------------------------------------------
        layer_3 {
            bindings = <
                &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans       &none       &kp Y     &kp U     &kp I     &kp O     &kp P
                &kp LG(N1)  &kp LG(N2)   &kp LG(N3)   &kp LG(N4)   &kp LG(N5)   &none       &kp H     &kp J     &kp K     &kp L     &kp SEMI
                &kp LG(N6)  &kp LG(N7)   &kp LG(N8)   &kp LG(N9)   &kp LG(N0)   &bootloader &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH
            >;
            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        //-----------------------------------------------------------------------------------------------------------------
        layer_4 {
            bindings = <
                &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans       &none       &kp Y     &kp U     &kp UP    &kp O     &kp P
                &kp LG(N1)  &kp LG(N2)   &kp LG(N3)   &kp LG(N4)   &kp LG(N5)   &none       &kp H     &kp LEFT  &kp DOWN  &kp RIGHT &trans
                &kp LG(N6)  &kp LG(N7)   &kp LG(N8)   &kp LG(N9)   &kp LG(N0)   &bootloader &kp N     &kp LCTRL &kp LSHFT &kp DOT   &kp FSLH
            >;
            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

    };
};
